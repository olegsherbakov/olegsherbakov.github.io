{"version":3,"sources":["webpack:///./src/components/X/index.js","webpack:///./src/pages/X.js"],"names":["x","cos","Math","PI","sin","pixelSize","fov","tan","ascii","c","toFixed","processor","sqrt1a","fun","y","z","max","abs","sqrt1b","iterCount","res","row","col","dist","n","nx","ny","nz","I","i","R0","r","min","round","length","X","result","console","log","useEffect","MediumPage"],"mappings":"qGAMYA,E,yBAFNC,EAAM,SAAAD,GAAC,OAAIE,KAAKD,IAAKD,EAAIE,KAAKC,GAAM,MACpCC,EAAM,SAAAJ,GAAC,OAAIE,KAAKE,IAAKJ,EAAIE,KAAKC,GAAM,MAYpCE,GAXML,EAWUM,KAXLJ,KAAKK,IAAKP,EAAIE,KAAKC,GAAM,KAWxB,MAKZK,EAAK,sEAELC,EACG,GADHA,EAEI,EAFJA,EAGI,GAHJA,EAII,EAJJA,EAKI,GALJA,EAME,GANFA,EAOE,GAPFA,EAQI,GARJA,EASI,IATJA,IAtBO,IAgCIR,EA1BH,IA0BgBA,EAzBjB,KAyB4BS,QApBpB,GAUfD,IAtBO,IAiCIL,EA1BJ,KA0BeM,QArBP,GAUfD,IAtBO,IAkCIL,EA5BH,IA4BgBH,EA3BjB,KA2B4BS,QAtBpB,GAUfD,GAaCJ,EAAYD,EA7BL,IAgBRK,GAcCJ,EAAYJ,EA9BL,IAgBRQ,GAeCJ,EAAYJ,EA/BL,IA+BkBG,EA9BnB,IAePK,GAgBCJ,EAAYJ,EA/BN,IAePQ,GAiBCJ,EAAYD,EAjCL,IAiCkBA,EAhCnB,IAePK,GAkBCR,EAlCO,IAkCMA,EAjCP,IAePQ,GAmBCL,EAlCM,IAePK,GAoBCL,EApCO,IAoCMH,EAnCP,IAyDPU,EAAY,WAkBhB,IAfA,IAAMC,EAAS,SAAAZ,GAAC,OAAK,EAAIA,GAAK,GAIxBa,EACF,SAACb,EAAGc,EAAGC,GAAP,OACEb,KAAKc,IACHd,KAAKe,IAAIjB,GAAK,GACdE,KAAKe,IAAIH,GAAK,GACdZ,KAAKe,IAAIF,GAAK,GACmB,IAT1B,SAAAf,GAAC,MAAI,IAAO,KAAOA,EASzBkB,CAAOlB,EAAIA,EAAIc,EAAIA,EAAIC,EAAIA,KAG9BI,EAAYV,EACdW,EAAM,KACDC,EAAMZ,EAAUY,EAAMZ,EAAUY,IAAO,CAC9C,IAAK,IAAIC,EAAMb,EAAUa,EAAMb,EAAUa,IAAO,CAc9C,IAbA,IAAIC,EAAO,EACLvB,EACJS,GACCa,EAAMb,EAAS,GAAKA,EAAOA,GAC3BY,EAAMZ,EAAS,GAAKA,EAAOA,EACxBK,EAAIL,GAAQY,EAAMZ,EAAS,GAAKA,EAAOA,EACvCM,EACJN,GACCa,EAAMb,EAAS,GAAKA,EAAOA,GAC3BY,EAAMZ,EAAS,GAAKA,EAAOA,EACxBe,EAAIZ,EAAOZ,EAAIA,EAAIc,EAAIA,EAAIC,EAAIA,GAC9BU,EAAezB,EAAIwB,EAAfE,EAAkBZ,EAAIU,EAAlBG,EAAqBZ,EAAIS,EAClCI,EAAI,GACDC,EAAI,EAAGA,GAAKV,EAAWU,IAC9BN,GAAQV,EAAIJ,EAASgB,EAAKF,EAAMd,EAASiB,EAAKH,EAAMd,EAASkB,EAAKJ,GAClEK,EAAEC,GAAKN,EAET,IAAMO,GACHF,EAAET,GAAaS,EAAET,EAAY,KAC7BS,EAAET,EAAY,GAAKS,EAAET,EAAY,IAC9BY,EAAC,SAAG7B,KAAK8B,IAAI,EAAG9B,KAAKc,IAAI,EAAGc,EAvFrB,IACL,GAyFRV,IADY,GAAKZ,EAAMN,KAAK+B,MAAMF,GAAKvB,EAAM0B,OAAS,MAAM,GAI9Dd,GAAO,KAGT,OAAOA,GAGM,SAASe,IACtB,IAAMC,EAASzB,IAUf,OARA0B,QAAQC,IAAR,YAAyBC,aAQlB,6BAAMH,G,aClHAI,UATI,kBACjB,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,MACA,kBAACL,EAAD","file":"component---src-pages-x-js-e024ab39244aba417877.js","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nconst dist = 1.6\r\n\r\nconst cos = x => Math.cos((x * Math.PI) / 180)\r\nconst sin = x => Math.sin((x * Math.PI) / 180)\r\nconst tan = x => Math.tan((x * Math.PI) / 180)\r\n\r\nconst alpha = 13 // vertical rotation\r\nconst beta = 30 // horizontal rotation\r\nconst fov = 35 // camera field of view\r\n\r\nconst rows = 36\r\n\r\nconst camPrecision = 2\r\n// const pixelSize = 0.01911973254297561\r\n\r\nconst pixelSize = tan(fov / 2) / ((rows - 1) / 2)\r\n\r\nconst colorShift = 0\r\nconst gamma = 1\r\n\r\nconst ascii = `$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/|()1{}[]?-_+~<>i!lI;:,\"^. `\r\n\r\nconst c = {\r\n  iters: 15,\r\n  minRow: 3,\r\n  maxRow: 40,\r\n  minCol: 0,\r\n  maxCol: 80 + 9,\r\n  rows: 36 + 7,\r\n  cols: 80 + 10,\r\n  scaleX: 0.6,\r\n  scaleY: 1.5,\r\n  camX: +(dist * cos(alpha) * cos(beta)).toFixed(camPrecision),\r\n  camY: +(dist * sin(beta)).toFixed(camPrecision),\r\n  camZ: +(dist * sin(alpha) * cos(beta)).toFixed(camPrecision),\r\n  ux: -pixelSize * sin(alpha),\r\n  uz: +pixelSize * cos(alpha),\r\n  vx: +pixelSize * cos(alpha) * sin(beta),\r\n  vy: -pixelSize * cos(beta),\r\n  vz: +pixelSize * sin(alpha) * sin(beta),\r\n  x0: -cos(alpha) * cos(beta),\r\n  y0: -sin(beta),\r\n  z0: -sin(alpha) * cos(beta),\r\n}\r\n\r\n/*const preCanvas = txt => {\r\n  const ctx = DOM.context2d(width, width)\r\n  const fontSize = Math.round(width / 60)\r\n  ctx.font = `${fontSize}px monospace`\r\n  ctx.fillStyle = 'black'\r\n  txt\r\n    .split('\\n')\r\n    .map((line, no) => ctx.fillText(line, 5, 5 + no * fontSize * 1.4))\r\n  return ctx.canvas\r\n}*/\r\n\r\n// const html = html => `${html}`\r\n\r\n/*const preHTML = txt =>\r\n  html`<pre>${txt\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')}</pre>`*/\r\n\r\nconst processor = () => {\r\n  // const sqIt = (e, i) => (i + e / i) / 2;\r\n  // const sqrt = 0 ? x => Math.sqrt(x) : x => sqIt(x, sqIt(x, sqIt(x, 1)));\r\n  const sqrt1a = x => (1 + x) / 2\r\n  const sqrt1b = x => 0.14 + 1.78 * x\r\n  // const sqrt1 = (x, init=1) => sqIt(x, init);\r\n  // const sqrt2 = (x, init=1) => sqIt(x, sqIt(x, init));\r\n  const fun = 1\r\n    ? (x, y, z) =>\r\n        Math.max(\r\n          Math.abs(x) - 0.3,\r\n          Math.abs(y) - 0.3,\r\n          Math.abs(z) - 0.3,\r\n          -sqrt1b(x * x + y * y + z * z) + 0.42\r\n        )\r\n    : (x, y, z) => Math.max(Math.abs(x), Math.abs(y), Math.abs(z)) - 0.3\r\n  const iterCount = c.iters\r\n  let res = '\\n'\r\n  for (let row = c.minRow; row < c.maxRow; row++) {\r\n    for (let col = c.minCol; col < c.maxCol; col++) {\r\n      let dist = 0\r\n      const x =\r\n        c.x0 +\r\n        (col - c.cols / 2) * c.ux * c.scaleX +\r\n        (row - c.rows / 2) * c.vx * c.scaleY\r\n      const y = c.y0 + (row - c.rows / 2) * c.vy * c.scaleY\r\n      const z =\r\n        c.z0 +\r\n        (col - c.cols / 2) * c.uz * c.scaleX +\r\n        (row - c.rows / 2) * c.vz * c.scaleY\r\n      const n = sqrt1a(x * x + y * y + z * z)\r\n      const [nx, ny, nz] = [x / n, y / n, z / n]\r\n      const I = []\r\n      for (let i = 0; i <= iterCount; i++) {\r\n        dist += fun(c.camX + nx * dist, c.camY + ny * dist, c.camZ + nz * dist)\r\n        I[i] = dist\r\n      }\r\n      const R0 =\r\n        (I[iterCount] - I[iterCount - 1]) /\r\n        (I[iterCount - 1] - I[iterCount - 2])\r\n      const r = Math.min(1, Math.max(0, R0 + colorShift)) ** gamma\r\n      // const R = 1 - (I[iterCount - 1] - I[iterCount - 2] < 0.00000000000001 ? 0.09 : Math.max(0, Math.min(1, R0)));\r\n      const ch = ('' + ascii[Math.round(r * (ascii.length - 1))])[0]\r\n      res += ch\r\n      // res += R0 > 0.3 ? '#' : ' ';\r\n    }\r\n    res += '\\n'\r\n  }\r\n  // return preCanvas(res)\r\n  return res\r\n}\r\n\r\nexport default function X() {\r\n  const result = processor()\r\n\r\n  console.log(`useEffect`, useEffect)\r\n\r\n  /*useEffect(() => {\r\n\r\n    // console.log(`effect`)\r\n    // console.log(`result`, result)\r\n  })*/\r\n\r\n  return <div>{result}</div>\r\n}\r\n","import React from 'react'\r\n\r\nimport Back from 'components/back'\r\nimport X from 'components/X'\r\nimport Layout from 'components/layout'\r\n\r\nconst MediumPage = () => (\r\n  <Layout>\r\n    <div>\r\n      <Back />\r\n      <X />\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nexport default MediumPage\r\n"],"sourceRoot":""}