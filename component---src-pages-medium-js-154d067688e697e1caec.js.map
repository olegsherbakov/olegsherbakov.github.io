{"version":3,"sources":["webpack:///./src/components/ASIICubeInteractive/utils.js","webpack:///./src/components/ASIICubeInteractive/index.js","webpack:///./src/pages/medium.js","webpack:///./src/components/back.js"],"names":["x","fontSize","Math","round","size","cos","PI","sin","pixelSize","fov","tan","ascii","processor","state","c","dist","alpha","beta","iters","minRow","maxRow","minCol","maxCol","rows","cols","scaleX","scaleY","camX","toFixed","camY","camZ","ux","uz","vx","vy","vz","x0","y0","z0","vector","sqrt1a","fun","y","z","max","abs","sqrt1b","iterCount","res","row","resIter","col","n","nx","ny","nz","I","i","R0","r","min","ch","length","push","join","drawSymbols","context","symbols","clearRect","canvas","width","height","map","line","no","fillText","prepareContext","getContext","font","fillStyle","initState","isProgress","shiftX","undefined","shiftY","ASIICubeInteractive","useState","setState","refCanvas","useRef","useEffect","wheelEvent","event","distPrev","deltaY","moveEvent","deltaX","ceil","clientX","clientY","startAlpha","startBeta","startEvent","endEvent","document","addEventListener","current","removeEventListener","ref","className","styles","Canvas","MediumPage","Back","to"],"mappings":"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","file":"component---src-pages-medium-js-154d067688e697e1caec.js","sourcesContent":["const fov = 35\r\nconst size = 600\r\nconst fontSize = Math.round(size / 50)\r\nconst cos = x => Math.cos((x * Math.PI) / 180)\r\nconst sin = x => Math.sin((x * Math.PI) / 180)\r\nconst tan = x => Math.tan((x * Math.PI) / 180)\r\nconst rows = 36\r\nconst camPrecision = 2\r\nconst pixelSize = tan(fov / 2) / ((rows - 1) / 2)\r\nconst colorShift = 0\r\nconst gamma = 1\r\nconst ascii = `$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/|()1{}[]?-_+~<>i!lI;:,\"^. `\r\nconst vector = ({ dist, alpha, beta }) => ({\r\n  iters: 15,\r\n  minRow: 3,\r\n  maxRow: 40,\r\n  minCol: 0,\r\n  maxCol: 80 + 9,\r\n  rows: 36 + 7,\r\n  cols: 80 + 10,\r\n  scaleX: 0.6,\r\n  scaleY: 1.5,\r\n  camX: +(dist * cos(alpha) * cos(beta)).toFixed(camPrecision),\r\n  camY: +(dist * sin(beta)).toFixed(camPrecision),\r\n  camZ: +(dist * sin(alpha) * cos(beta)).toFixed(camPrecision),\r\n  ux: -pixelSize * sin(alpha),\r\n  uz: +pixelSize * cos(alpha),\r\n  vx: +pixelSize * cos(alpha) * sin(beta),\r\n  vy: -pixelSize * cos(beta),\r\n  vz: +pixelSize * sin(alpha) * sin(beta),\r\n  x0: -cos(alpha) * cos(beta),\r\n  y0: -sin(beta),\r\n  z0: -sin(alpha) * cos(beta),\r\n})\r\n\r\nexport const processor = state => {\r\n  const c = vector(state)\r\n  const sqrt1a = x => (1 + x) / 2\r\n  const sqrt1b = x => 0.14 + 1.78 * x\r\n  const fun = 1\r\n    ? (x, y, z) =>\r\n        Math.max(\r\n          Math.abs(x) - 0.3,\r\n          Math.abs(y) - 0.3,\r\n          Math.abs(z) - 0.3,\r\n          -sqrt1b(x * x + y * y + z * z) + 0.42\r\n        )\r\n    : (x, y, z) => Math.max(Math.abs(x), Math.abs(y), Math.abs(z)) - 0.3\r\n  const iterCount = c.iters\r\n  const res = []\r\n\r\n  for (let row = c.minRow; row < c.maxRow; row++) {\r\n    const resIter = []\r\n\r\n    for (let col = c.minCol; col < c.maxCol; col++) {\r\n      let dist = 0\r\n      const x =\r\n        c.x0 +\r\n        (col - c.cols / 2) * c.ux * c.scaleX +\r\n        (row - c.rows / 2) * c.vx * c.scaleY\r\n      const y = c.y0 + (row - c.rows / 2) * c.vy * c.scaleY\r\n      const z =\r\n        c.z0 +\r\n        (col - c.cols / 2) * c.uz * c.scaleX +\r\n        (row - c.rows / 2) * c.vz * c.scaleY\r\n      const n = sqrt1a(x * x + y * y + z * z)\r\n      const [nx, ny, nz] = [x / n, y / n, z / n]\r\n      const I = []\r\n      for (let i = 0; i <= iterCount; i++) {\r\n        dist += fun(c.camX + nx * dist, c.camY + ny * dist, c.camZ + nz * dist)\r\n        I[i] = dist\r\n      }\r\n      const R0 =\r\n        (I[iterCount] - I[iterCount - 1]) /\r\n        (I[iterCount - 1] - I[iterCount - 2])\r\n      const r = Math.min(1, Math.max(0, R0 + colorShift)) ** gamma\r\n      const ch = `${ascii[Math.round(r * (ascii.length - 1))]}`[0]\r\n\r\n      resIter.push(ch)\r\n    }\r\n\r\n    res.push(resIter.join(``))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const drawSymbols = (context, symbols) => {\r\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height)\r\n  symbols.map((line, no) => context.fillText(line, 5, 5 + no * fontSize * 1.4))\r\n\r\n  return context.canvas\r\n}\r\n\r\nexport const prepareContext = canvas => {\r\n  const context = canvas.getContext(`2d`)\r\n\r\n  canvas.width = size\r\n  canvas.height = size\r\n  context.font = `${fontSize}px monospace`\r\n  context.fillStyle = `black`\r\n\r\n  return context\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nimport { processor, drawSymbols, prepareContext } from './utils'\r\nimport styles from 'styles/main.module.css'\r\n\r\nconst initState = {\r\n  dist: 1.3,\r\n  alpha: 15,\r\n  beta: 30,\r\n  isProgress: false,\r\n  shiftX: undefined,\r\n  shiftY: undefined,\r\n}\r\n\r\nlet context = undefined\r\n\r\nfunction ASIICubeInteractive() {\r\n  const [state, setState] = useState(initState)\r\n  const refCanvas = useRef()\r\n\r\n  useEffect(() => {\r\n    const wheelEvent = event => {\r\n      setState(state => {\r\n        const { dist: distPrev } = state\r\n        const dist = Math.max(\r\n          Math.min(event.deltaY > 0 ? distPrev + 0.1 : distPrev - 0.1, 2.5),\r\n          0.5\r\n        )\r\n\r\n        return {\r\n          ...state,\r\n          dist,\r\n        }\r\n      })\r\n    }\r\n    const moveEvent = event => {\r\n      setState(state => {\r\n        if (!state.isProgress) {\r\n          return state\r\n        }\r\n\r\n        const deltaX = Math.ceil((state.shiftX - event.clientX) / 5)\r\n        const deltaY = Math.ceil((state.shiftY - event.clientY) / 5)\r\n        const alpha = deltaX === 0 ? state.alpha : state.startAlpha + deltaX\r\n        const beta = deltaY === 0 ? state.beta : state.startBeta - deltaY\r\n\r\n        return {\r\n          ...state,\r\n          alpha,\r\n          beta,\r\n        }\r\n      })\r\n    }\r\n    const startEvent = ({ clientX, clientY }) => {\r\n      setState(state => ({\r\n        ...state,\r\n        isProgress: true,\r\n        startAlpha: state.alpha,\r\n        startBeta: state.beta,\r\n        shiftX: clientX,\r\n        shiftY: clientY,\r\n      }))\r\n    }\r\n\r\n    const endEvent = () => {\r\n      setState(state => ({\r\n        ...state,\r\n        isProgress: false,\r\n      }))\r\n    }\r\n\r\n    document.addEventListener(`mousewheel`, wheelEvent)\r\n    document.addEventListener(`mousemove`, moveEvent)\r\n    document.addEventListener(`mousedown`, startEvent)\r\n    document.addEventListener(`mouseup`, endEvent)\r\n\r\n    context = prepareContext(refCanvas.current)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousewheel`, wheelEvent)\r\n      document.removeEventListener(`mousemove`, moveEvent)\r\n      document.removeEventListener(`mousedown`, startEvent)\r\n      document.removeEventListener(`mouseup`, endEvent)\r\n\r\n      context = undefined\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    drawSymbols(context, processor(state))\r\n  }, [state])\r\n\r\n  return <canvas ref={refCanvas} className={styles.Canvas} />\r\n}\r\n\r\nexport default ASIICubeInteractive\r\n","import React from 'react'\r\n\r\nimport Back from 'components/back'\r\nimport ASIICubeInteractive from 'components/ASIICubeInteractive'\r\nimport Layout from 'components/layout'\r\n\r\nconst MediumPage = () => (\r\n  <Layout>\r\n    <div>\r\n      <Back />\r\n      <ASIICubeInteractive />\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nexport default MediumPage\r\n","import React from 'react'\r\nimport Link from 'gatsby-link'\r\n\r\nconst Back = () => (\r\n  <p>\r\n    &larr; <Link to=\"/\">Back</Link>\r\n  </p>\r\n)\r\n\r\nexport default Back\r\n"],"sourceRoot":""}